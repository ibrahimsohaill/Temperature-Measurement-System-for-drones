#include<LiquidCrystal.h>// to include the lcd library.
#include <SharpIR.h>// to include the distance Sensor library.
#include<math.h>// to include the math library.
LiquidCrystal preLcd(4,6,10,11,12,13);
#define IRPin A1
#define model 1080
SharpIR distanceSensor = SharpIR(IRPin, model);
char predatorary[]="  The predator";
int therSensor;
int distanceInCm;
char distanceInCmString;
char therSensorString[]=" c";
char infoWriteAry[]="in station last temp = ";
char infoWrite2Ary[]=" the hight =";
String allInfo[41];
int tot = 1000;
String totString = "NaN";
int disChk;
bool gt80 = false;
const int R2 = 10000.0;
const int Ro = 10000.0;
const int To = 298.15;
const int B = 3470.0;
const int Vin = 5.0;
float Vo;
float Rt;
float Tk;
int TCR;
float Tc[5];
float avgTemp = 0;

int sec;
int screenScoller;
int fix;
     
void setup() {
   Serial.begin(9600);
   preLcd.begin(16,2);
   preLcd.setCursor(0,0);
   for(int bgn = 0; bgn < 14; bgn++){
    preLcd.print(predatorary[bgn]);
    delay(250);
  }//bgn End
}//setup End

void loop() {
  for(int set1 = 0; set1 < 23; set1++){
    allInfo[set1]=infoWriteAry[set1];
    }//set1 End
    allInfo[23]= totString;
    allInfo[24]=therSensorString[1];
    allInfo[25]=therSensorString[2];
    for(int set2 = 26; set2 < 39; set2++){
      allInfo[set2]=infoWrite2Ary[set2 - 26];
      }//set2 End
    distanceInCm = distanceSensor.distance();
   
    allInfo[39]=distanceInCm;
     
    distanceInCm = distanceSensor.distance();
    while(distanceInCm <= 80 ){
      if(tot < 1000){
    totString = String(round(avgTemp));
    }//if tot <> 1000! End
    
    allInfo[23]= totString;
      preLcd.clear();
    for(screenScoller = 0;screenScoller<40;screenScoller++){
      preLcd.setCursor(0,0);
      preLcd.clear();
      preLcd.print("  The predator");
      preLcd.setCursor(0,1);
      
      for(fix = 0; fix<40;fix++){
        distanceInCm = distanceSensor.distance();
        disChk = distanceInCm;
        allInfo[39]=distanceInCm;
        if(disChk == distanceInCm){
        preLcd.print(allInfo[screenScoller+fix]);
        delay(9);
        }//dischk End
        else{
          distanceInCm = distanceSensor.distance();
          allInfo[39]=distanceInCm;
          preLcd.print(allInfo[screenScoller+fix]);
          delay(9);
          }//chk<>dis!
        if(screenScoller+fix>40){
            delay(250);
            break;
           }//screenScoller+fix End
        }//fix End
        delay(250);
        if(distanceInCm>80){
            delay(250);
            break;
            }//distanceInCm > 80 for screenScoller End
      }//screenScoller End
    }//while <= 80
     if(distanceInCm > 80){
      gt80 = true;
      }//if distanceInCm > 80 End
      while(gt80 == true){
        preLcd.clear();
        for(sec = 10; sec >= 0; sec--){
          preLcd.setCursor(0,0);
          preLcd.print("  The predator");
          preLcd.setCursor(0,1);
          preLcd.print(sec);
          preLcd.print("s to measure");
          delay(1000);
          preLcd.clear();
          }//for sec End
          tot = 0.0;
          for(int thetRead = 0; thetRead < 5; thetRead++){
            therSensor = analogRead(A0);
            Vo = therSensor *(5.0/1023.0);
            Rt = (R2/Vo)*Vin-R2;
            Tk = pow(((1.0/To)+((1.0/B)*log(Rt/Ro))),-1.0);
            TCR = round(Tk -273.2);
            Tc[thetRead]= TCR;
            preLcd.setCursor(0,0);
            preLcd.print("  The predator");
            preLcd.setCursor(0,1);
            String num;
            if(thetRead+1 == 1){
              num ="st";
               }//thetRead+1 == 1 End
               else if(thetRead+1==2) {
                num ="nd";
                }//thetRead+1==2 end
                else if(thetRead+1==3) {
                num ="rd";
                }//thetRead+1==3 end
                else{
                num ="th";
                }//thetRead+1 > 3 end
             preLcd.print("the ");
             preLcd.print(thetRead+1);
             preLcd.print(num);
             preLcd.print(" temp:");
             preLcd.print(round(Tc[thetRead]));
             preLcd.print("c");
             delay(3000);
             preLcd.clear();
             tot += Tc[thetRead];
             if(thetRead>4){
              preLcd.clear();
              }//thetRead>4 End
          }//thetRead End
          distanceInCm = distanceSensor.distance(); 
              
             avgTemp = tot/5.0;
             preLcd.setCursor(0,0);
             preLcd.print("  The predator");
             preLcd.setCursor(0,1);
             preLcd.print("the avg temp=");
             preLcd.print(round(avgTemp));
             delay(5000);
             
     for(sec = 15; sec >= 0; sec--){
      distanceInCm = distanceSensor.distance(); 
              if(distanceInCm<=80){
              gt80=false;
              preLcd.clear();
              break;
              }//distanceInCm<80 chk End
       preLcd.clear();
       preLcd.setCursor(0,0);
       preLcd.print("  The predator");
       preLcd.setCursor(0,1);
       preLcd.print(sec);
       preLcd.print("s");
        preLcd.print(" to To land!");
       distanceInCm = distanceSensor.distance();
       disChk = distanceInCm;
       delay(1000);
       
       
      }//for sec End
              distanceInCm = distanceSensor.distance(); 
              while(distanceInCm<=80){
              gt80=false;
              preLcd.clear();
              break;
              }//distanceInCm<80 chk End
                   
        }//while g.t 80 End
      distanceInCm = distanceSensor.distance(); 
      
      }//loop End
 
